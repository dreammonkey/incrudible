<?php

namespace {{ namespace }};

use App\Incrudible\Filters\SearchFilter;
use App\Incrudible\Filters\SortingFilter;
use App\Incrudible\Http\Requests\{{ model_singular_uc_first }}\Get{{ model_plural_uc_first }}Request;
use App\Incrudible\Http\Requests\{{ model_singular_uc_first }}\Store{{ model_singular_uc_first }}Request;
use App\Incrudible\Http\Requests\{{ model_singular_uc_first }}\Update{{ model_singular_uc_first }}Request;
use App\Incrudible\Http\Resources\{{ model_singular_uc_first }}Resource;
use App\Incrudible\Models\{{ model_singular_uc_first }};
use App\Incrudible\Traits\FormBuilder;
use Illuminate\Support\Facades\Pipeline;
use Incrudible\Incrudible\Facades\Incrudible;

class {{ model_singular_uc_first }}Controller extends Controller
{
    use FormBuilder;

    /**
     * Display a listing of the resource.
     */
    public function index(Get{{ model_plural_uc_first }}Request $request)
    {
        if ($request->wantsJson()) {

            return {{ model_singular_uc_first }}Resource::collection(

                Pipeline::send(
                    {{ model_singular_uc_first }}::query(),
                )
                    ->through([
                        new SearchFilter(
                            search: $request->validated('search'),
                            fields: {{ searchableFields }}
                        ),
                        new SortingFilter(
                            orderBy: $request->validated('orderBy'),
                            orderDir: $request->validated('orderDir')
                        ),
                    ])
                    ->thenReturn()
                    ->paginate($request->validated('perPage', 25))
            );
        }

        return inertia('{{ model_plural_uc_first }}/Index');
    }

    /**
     * Show the form for creating a new resource.
     */
    public function create()
    {
        $rules = (new Store{{ model_singular_uc_first }}Request)->rules();

        $metadata = $this->generateFormMetadata($rules);

        return inertia('{{ model_plural_uc_first }}/Create', [
            '{{ model_singular }}' => {{ model_singular_uc_first }}::make()->toResource(),
            'metadata' => $metadata,
        ]);
    }

    /**
     * Store a newly created resource in storage.
     */
    public function store(Store{{ model_singular_uc_first }}Request $request)
    {
        ${{ model_singular }} = {{ model_singular_uc_first }}::create($request->validated());
        $prefix = Incrudible::routePrefix();

        return redirect()->route("$prefix.{{ model_plural }}.show", ${{ model_singular }})->with('success', '{{ model_singular_uc_first }} created successfully.');
    }

    /**
     * Display the specified resource.
     */
    public function show({{ model_singular_uc_first }} ${{ model_singular }})
    {
        $metadata = $this->getFormMetaData();

        return inertia('{{ model_plural_uc_first }}/Show', [
            '{{ model_singular }}' => ${{ model_singular }}->toResource(),
            'metadata' => $metadata,
        ]);
    }

    /**
     * Show the form for editing the specified resource.
     */
    public function edit({{ model_singular_uc_first }} ${{ model_singular }})
    {
        $rules = (new Update{{ model_singular_uc_first }}Request)->rules();

        $metadata = $this->generateFormMetadata($rules);

        return inertia('{{ model_plural_uc_first }}/Edit', [
            '{{ model_singular }}' => ${{ model_singular }}->toResource(),
            'metadata' => $metadata,
        ]);
    }

    /**
     * Update the specified resource in storage.
     */
    public function update(Update{{ model_singular_uc_first }}Request $request, {{ model_singular_uc_first }} ${{ model_singular }})
    {
        ${{ model_singular }}->update($request->validated());

        return redirect()->back()->with('success', '{{ model_singular_uc_first }} updated successfully.');
    }

    /**
     * Remove the specified resource from storage.
     */
    public function destroy({{ model_singular_uc_first }} ${{ model_singular }})
    {
        //
    }
}
